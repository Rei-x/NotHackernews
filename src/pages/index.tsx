import {
  Button,
  Col,
  Container,
  Input,
  Row,
  Spacer,
  styled,
  Switch,
  Text,
} from "@nextui-org/react";
import { Models } from "appwrite";
import { motion } from "framer-motion";
import type { NextPage } from "next";
import Head from "next/head";
import { useEffect, useState } from "react";
import api from "../api";
import config from "../config";
import { Todo } from "../models/todo";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const [todos, setTodos] = useState<Models.DocumentList<Todo>>();
  const [input, setInput] = useState("");

  useEffect(() => {
    (async () => {
      if (!(await api.provider().account.get())) {
        await api.provider().account.createAnonymousSession();
      }
      const apiData = await api
        .provider()
        .database.listDocuments<Todo>(config.COLLECTION_ID);
      setTodos(apiData);
    })();

    return api
      .provider()
      .subscribe<Todo>(
        `collections.${config.COLLECTION_ID}.documents`,
        (data) => {
          console.log(data);
          if (data.event === "database.documents.create") {
            setTodos((prev) => ({
              ...prev!,
              documents: [...prev!.documents, data.payload],
            }));
          }
          if (data.event === "database.documents.update") {
            setTodos((prev) => ({
              ...prev!,
              documents: prev!.documents.map((doc) =>
                doc.$id === data.payload.$id ? data.payload : doc
              ),
            }));
          }
        }
      );
  }, []);

  const createTodo = () => {
    api
      .provider()
      .database.createDocument<Todo>(config.COLLECTION_ID, "unique()", {
        content: input,
        createdAt: Date.now(),
      });
  };

  const updateTodo = async (id: string, isDone: boolean) => {
    await api
      .provider()
      .database.updateDocument(config.COLLECTION_ID, id, { isDone });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <Row justify="center" align="center">
          <div>
            <h1>Todo list!</h1>
            <div>
              <Input
                value={input}
                onChange={(e) => setInput(e.target.value)}
                shadow={false}
                type="text"
                placeholder="What you have to do?"
                aria-label="content"
                contentRight={
                  <>
                    <Spacer x={2} />
                    <Button
                      style={{ minWidth: "3rem" }}
                      onClick={() => createTodo()}
                    >
                      +
                    </Button>
                  </>
                }
              />
            </div>
            <Container
              style={{
                display: "flex",
                gap: "0.3rem",
                flexDirection: "column",
              }}
            >
              {todos?.documents
                .sort((a, b) => {
                  if (a.isDone === b.isDone) {
                    return b.createdAt - a.createdAt;
                  }
                  return a.isDone ? 1 : -1;
                })
                .map((document) => (
                  <motion.div layout key={document.$id}>
                    <Row justify="space-between">
                      <Text>{document.content}</Text>
                      <Switch
                        checked={document.isDone}
                        onChange={(e) => {
                          updateTodo(document.$id, e.target.checked);
                        }}
                      />
                    </Row>
                  </motion.div>
                ))}
            </Container>
          </div>
        </Row>
      </Container>
    </div>
  );
};

export default Home;
